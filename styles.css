/* =========================================
   DYNAMIC TETRIS BOARD - AUTO HEIGHT ADJUSTMENT
   กระดานปรับขนาดตามบล็อคที่มีอยู่จริง
   ========================================= */

/* =================================
   GLOBAL STYLES & RESET
   ================================= */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    overflow-x: hidden;
    min-height: 100vh;
}

/* =================================
   SCREEN TRANSITIONS & CONTAINERS
   ================================= */

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    padding: clamp(5px, 1vw, 15px);
    width: 100%;
}

.screen {
    display: none;
    text-align: center;
    animation: fadeIn 0.5s ease-in;
    width: 100%;
    max-width: 100vw;
    margin: 0 auto;
    height: 100vh;
}

.screen.active {
    display: block;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

/* =================================
   MENU SCREEN STYLES
   ================================= */

.menu-screen {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: clamp(1rem, 3vw, 2rem);
    padding: clamp(1rem, 4vw, 2rem);
    height: 100vh;
}

.game-title {
    font-size: clamp(2rem, 8vw, 4rem);
    font-weight: bold;
    margin-bottom: clamp(1rem, 3vw, 2rem);
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 4px 8px rgba(0,0,0,0.3);
    text-align: center;
    line-height: 1.2;
}

.connection-status {
    margin-bottom: clamp(1rem, 2vw, 2rem);
    padding: clamp(12px, 3vw, 18px) clamp(20px, 5vw, 35px);
    border-radius: 25px;
    font-weight: bold;
    font-size: clamp(1rem, 2.5vw, 1.2rem);
    width: 100%;
    max-width: clamp(280px, 50vw, 400px);
    text-transform: uppercase;
    letter-spacing: 1px;
    text-align: center;
    display: inline-block;
    margin-left: auto;
    margin-right: auto;
}

.connected {
    background: rgba(76, 175, 80, 0.3);
    border: 2px solid #4CAF50;
}

.disconnected {
    background: rgba(244, 67, 54, 0.3);
    border: 2px solid #f44336;
}

.menu-buttons {
    display: flex;
    flex-direction: column;
    gap: clamp(0.8rem, 2vw, 1.5rem);
    width: 100%;
    max-width: clamp(280px, 50vw, 400px);
    margin: 0 auto;
}

/* =================================
   BUTTON STYLES
   ================================= */

.btn {
    padding: clamp(12px, 3vw, 18px) clamp(20px, 5vw, 35px);
    font-size: clamp(1rem, 2.5vw, 1.2rem);
    font-weight: bold;
    border: none;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
    color: white;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-decoration: none;
    display: inline-block;
    width: 100%;
    text-align: center;
    min-height: 44px;
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.3);
}

.btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
}

.btn-single-player {
    background: linear-gradient(45deg, #ff9500, #ff6b00);
}

.btn-single-player:hover {
    background: linear-gradient(45deg, #ffb84d, #ff8533);
}

/* =================================
   CONTROLS ACCORDION
   ================================= */

.controls-accordion {
    width: 100%;
    max-width: clamp(280px, 50vw, 400px);
    margin: clamp(1rem, 2vw, 1.5rem) auto;
}

.controls-toggle {
    background: linear-gradient(45deg, #8a2be2, #4b0082);
    border: none;
    color: white;
    padding: clamp(12px, 3vw, 18px) clamp(20px, 5vw, 35px);
    font-size: clamp(1rem, 2.5vw, 1.2rem);
    font-weight: bold;
    border-radius: 25px;
    cursor: pointer;
    transition: all 0.3s ease;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    text-transform: uppercase;
    letter-spacing: 1px;
    min-height: 44px;
}

.controls-toggle:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.3);
    background: linear-gradient(45deg, #9932cc, #6a0dad);
}

.controls-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out, padding 0.3s ease-out;
    background: rgba(138, 43, 226, 0.1);
    border-radius: 15px;
    margin-top: 10px;
    backdrop-filter: blur(10px);
}

.controls-content.expanded {
    max-height: 400px;
    padding: clamp(15px, 3vw, 25px);
    border: 2px solid rgba(138, 43, 226, 0.3);
}

.controls-section {
    text-align: left;
    margin-bottom: 15px;
}

.controls-title {
    color: #8a2be2;
    font-weight: bold;
    font-size: clamp(0.9rem, 2vw, 1.1rem);
    margin-bottom: 8px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.controls-list {
    font-size: clamp(0.8rem, 1.8vw, 1rem);
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.9);
}

.control-item {
    display: flex;
    justify-content: space-between;
    margin: 5px 0;
    padding: 3px 0;
    flex-wrap: wrap;
    gap: 5px;
}

.control-key {
    background: rgba(255, 255, 255, 0.2);
    padding: 2px 8px;
    border-radius: 6px;
    font-weight: bold;
    font-size: clamp(0.7rem, 1.5vw, 0.9rem);
    white-space: nowrap;
}

.toggle-icon {
    transition: transform 0.3s ease;
}

.toggle-icon.rotated {
    transform: rotate(180deg);
}

/* =================================
   ROOM INFO STYLES
   ================================= */

.room-info {
    background: rgba(255,255,255,0.1);
    border-radius: 15px;
    padding: clamp(1.5rem, 4vw, 2.5rem);
    margin-bottom: clamp(1.5rem, 3vw, 2rem);
    backdrop-filter: blur(10px);
    width: 100%;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
}

.room-id {
    font-size: clamp(1.5rem, 5vw, 2.5rem);
    font-weight: bold;
    color: #ffd700;
    margin-bottom: clamp(0.8rem, 2vw, 1.2rem);
    word-break: break-all;
}

.players-list {
    list-style: none;
    margin: clamp(0.8rem, 2vw, 1.2rem) 0;
}

.players-list li {
    padding: clamp(8px, 2vw, 12px);
    margin: 5px 0;
    background: rgba(255,255,255,0.1);
    border-radius: 10px;
    font-size: clamp(0.9rem, 2vw, 1.1rem);
}

.players-list li.current-player {
    background: rgba(255, 215, 0, 0.3);
    border: 2px solid #ffd700;
}

/* =================================
   GAME SCREEN LAYOUT - OPTIMIZED FOR FULL SCREEN
   ================================= */

.game-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
    padding: 0;
    box-sizing: border-box;
    overflow: hidden;
}

.game-screen {
    display: flex;
    width: 100vw;
    height: 100vh;
    gap: clamp(5px, 1.5vw, 20px);
    align-items: stretch;
    justify-content: space-between;
    padding: clamp(5px, 1vw, 10px);
    box-sizing: border-box;
}

/* =================================
   PANEL STYLES - OPTIMIZED SIZING
   ================================= */

.player-info, .left-panel, .right-panel {
    flex: 0 0 auto;
    width: clamp(120px, 15vw, 200px);
    display: flex;
    flex-direction: column;
    gap: clamp(5px, 1vw, 10px);
    max-height: 100vh;
    overflow-y: auto;
    padding: clamp(2px, 0.5vw, 5px);
}

/* Game Info Cards - Compact Design */
.player-info-card, 
.opponent-info-card, 
.stats-card, 
.opponent-stats-card, 
.next-piece-container {
    padding: clamp(6px, 1.5vw, 12px);
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    backdrop-filter: blur(10px);
    text-align: center;
    width: 100%;
    font-size: clamp(0.6rem, 1.4vw, 0.9rem);
    min-height: fit-content;
    margin-bottom: clamp(2px, 0.5vw, 5px);
}

.player-info-card, .stats-card {
    background: rgba(0, 255, 255, 0.1);
    border: 2px solid #00ffff;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.2);
}

.opponent-info-card, .opponent-stats-card {
    background: rgba(255, 107, 107, 0.1);
    border: 2px solid #ff6b6b;
    box-shadow: 0 0 15px rgba(255, 107, 107, 0.2);
}

.next-piece-container, .hold-piece-container {
    background: rgba(138, 43, 226, 0.2);
    border: 2px solid #8a2be2;
    box-shadow: 0 0 15px rgba(138, 43, 226, 0.2);
}

.player-label, .opponent-label, .next-piece-title, .hold-piece-title {
    font-weight: bold;
    margin-bottom: 0.2rem;
    font-size: clamp(0.7rem, 1.5vw, 0.9rem);
}

.player-label {
    color: #00ffff;
}

.opponent-label {
    color: #ff6b6b;
}

.next-piece-title, .hold-piece-title {
    color: #8a2be2;
}

.player-name-display {
    color: white;
    font-size: clamp(0.8rem, 1.6vw, 1rem);
    font-weight: bold;
}

#next-piece-preview, .next-piece-preview,
#hold-piece-preview, .hold-piece-preview {
    width: clamp(40px, 8vw, 60px);
    height: clamp(40px, 8vw, 60px);
    background: rgba(0,0,0,0.8);
    border: 2px solid #333;
    border-radius: 6px;
    margin: 0 auto;
    position: relative;
}

/* =================================
   GAME BOARDS LAYOUT - MAXIMIZED SPACE USAGE
   ================================= */

.boards-container {
    display: flex;
    flex-direction: column;
    gap: clamp(10px, 2vw, 20px);
    align-items: center;
    justify-content: center;
    flex: 1;
    min-width: 0;
    height: 100%;
    padding: 0 clamp(5px, 1vw, 10px);
}

.main-player-area {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: clamp(5px, 1vw, 10px);
    width: 100%;
    flex: 1;
    justify-content: center;
}

/* =================================
   DYNAMIC TETRIS BOARD STYLES - ใหม่!
   ================================= */

.tetris-board, .responsive-board {
    background: rgba(0,0,0,0.9);
    border: 3px solid;
    border-radius: 10px;
    overflow: hidden;
    position: relative;
    transition: all 0.3s ease;
    /* เพิ่ม properties สำหรับ dynamic height */
    --min-visible-rows: 8; /* แสดงอย่างน้อย 8 แถว */
    --max-visible-rows: 20; /* แสดงสูงสุด 20 แถว (เต็มกระดาน) */
    --current-height-rows: 20; /* จำนวนแถวปัจจุบันที่ต้องแสดง */
}

/* กระดานหลัก - ปรับขนาดตามเนื้อหา */
.main-board {
    --available-width: calc(100vw - clamp(240px, 30vw, 400px) - 40px);
    --available-height: calc(100vh - 40px);
    --max-board-width: calc(var(--available-height) / 2);
    --board-width: min(var(--available-width), var(--max-board-width));
    --cell-size: calc(var(--board-width) / 10);
    
    width: var(--board-width);
    /* Dynamic height calculation */
    height: calc(var(--cell-size) * var(--current-height-rows));
    max-height: calc(100vh - 40px);
    border-color: #00ffff;
    box-shadow: 0 0 25px rgba(0, 255, 255, 0.4);
    
    /* เพิ่ม smooth transition สำหรับการเปลี่ยนแปลงขนาด */
    transition: height 0.3s ease, transform 0.1s ease;
}

/* Class สำหรับปรับขนาดแบบไดนามิก */
.main-board.dynamic-height {
    /* คำนวณความสูงตามจำนวนแถวที่มีบล็อค + buffer */
    --occupied-rows: var(--highest-block-row, 0);
    --visible-rows: max(var(--min-visible-rows), min(var(--max-visible-rows), calc(var(--occupied-rows) + 4)));
    --current-height-rows: var(--visible-rows);
    height: calc(var(--cell-size) * var(--visible-rows));
}

/* Animation สำหรับการขยายกระดาน */
.main-board.expanding {
    animation: expandBoard 0.3s ease-out;
}

.main-board.contracting {
    animation: contractBoard 0.3s ease-out;
}

@keyframes expandBoard {
    from {
        transform: scaleY(0.95);
        opacity: 0.9;
    }
    to {
        transform: scaleY(1);
        opacity: 1;
    }
}

@keyframes contractBoard {
    from {
        transform: scaleY(1.05);
    }
    to {
        transform: scaleY(1);
    }
}

/* กระดานฝ่ายตรงข้าม - ขนาดที่เหมาะสม */
.opponent-board {
    --board-width: min(25vw, calc(var(--available-height) / 3));
    --cell-size: calc(var(--board-width) / 10);
    
    width: var(--board-width);
    height: calc(var(--board-width) * 2);
    max-height: calc(50vh);
    border-color: #ff6b6b;
    box-shadow: 0 0 15px rgba(255, 107, 107, 0.3);
    opacity: 0.9;
}

/* เพิ่มกระดานฝ่ายตรงข้ามให้รองรับ dynamic height */
.opponent-board.dynamic-height {
    --occupied-rows: var(--opponent-highest-block-row, 0);
    --visible-rows: max(6, min(15, calc(var(--occupied-rows) + 3)));
    --current-height-rows: var(--visible-rows);
    height: calc(var(--cell-size) * var(--visible-rows));
}

/* Debug mode */
.tetris-board.debug {
    background-image: 
        linear-gradient(to right, rgba(255,255,255,0.1) 1px, transparent 1px),
        linear-gradient(to bottom, rgba(255,255,255,0.1) 1px, transparent 1px);
    background-size: 
        calc(100% / 10) calc(100% / var(--current-height-rows));
}

/* เพิ่ม visual feedback เมื่อกระดานเปลี่ยนขนาด */
.tetris-board.size-changing {
    box-shadow: 
        0 0 25px rgba(255, 255, 255, 0.3),
        inset 0 0 25px rgba(255, 255, 255, 0.1);
}

/* =================================
   TETRIS BLOCKS
   ================================= */

.tetris-block {
    position: absolute;
    border: 1px solid rgba(255,255,255,0.1);
    border-radius: 2px;
    /* เพิ่ม transition สำหรับการเคลื่อนไหวที่ smooth */
    transition: all 0.1s ease;
}

.block-i { 
    background: #00f0f0; 
    box-shadow: inset 0 0 5px rgba(0, 240, 240, 0.5);
}
.block-o { 
    background: #f0f000; 
    box-shadow: inset 0 0 5px rgba(240, 240, 0, 0.5);
}
.block-t { 
    background: #a000f0; 
    box-shadow: inset 0 0 5px rgba(160, 0, 240, 0.5);
}
.block-s { 
    background: #00f000; 
    box-shadow: inset 0 0 5px rgba(0, 240, 0, 0.5);
}
.block-z { 
    background: #f00000; 
    box-shadow: inset 0 0 5px rgba(240, 0, 0, 0.5);
}
.block-j { 
    background: #0000f0; 
    box-shadow: inset 0 0 5px rgba(0, 0, 240, 0.5);
}
.block-l { 
    background: #f0a000; 
    box-shadow: inset 0 0 5px rgba(240, 160, 0, 0.5);
}

/* เพิ่ม hover effect สำหรับบล็อค */
.tetris-block:hover {
    filter: brightness(1.2);
    transform: scale(1.02);
}

/* =================================
   BOARD HEIGHT INDICATORS
   ================================= */

/* เพิ่ม indicator แสดงพื้นที่ที่มีบล็อค */
.tetris-board::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: calc(var(--cell-size) * var(--occupied-rows, 0));
    background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0.02),
        rgba(255, 255, 255, 0.05)
    );
    pointer-events: none;
    opacity: 0.3;
    transition: height 0.3s ease;
}

/* Visual separator สำหรับแสดงขอบเขตที่มีบล็อค */
.tetris-board::after {
    content: '';
    position: absolute;
    top: calc(var(--cell-size) * var(--occupied-rows, 0));
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(
        to right,
        transparent,
        rgba(255, 255, 255, 0.3),
        transparent
    );
    pointer-events: none;
    opacity: 0.5;
    transition: top 0.3s ease, opacity 0.3s ease;
}

/* ซ่อน separator เมื่อไม่มีบล็อค */
.tetris-board.empty::after {
    opacity: 0;
}

/* =================================
   GAME OVER OVERLAY
   ================================= */

.game-over-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0,0,0,0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
}

.game-over-text {
    font-size: clamp(1rem, 3vw, 1.8rem);
    font-weight: bold;
    color: #ff6b6b;
    text-shadow: 0 0 10px rgba(255, 107, 107, 0.5);
}

/* =================================
   STATS DISPLAY STYLES
   ================================= */

.stat-row {
    display: flex;
    justify-content: space-between;
    margin: 3px 0;
    font-size: clamp(0.6rem, 1.3vw, 0.8rem);
    align-items: center;
}

.stat-label {
    color: rgba(255, 255, 255, 0.8);
    font-weight: normal;
}

.stat-value {
    color: white;
    font-weight: bold;
    text-align: right;
}

.level-display {
    color: #ffd700;
}

.score-display {
    color: #00ff00;
}

.lines-display {
    color: #ff6b6b;
}

.time-display {
    color: #4ecdc4;
}

/* =================================
   MOBILE CONTROLS - IMPROVED
   ================================= */

.mobile-controls {
    display: none;
    position: fixed;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0,0,0,0.9);
    border-radius: 15px;
    padding: clamp(8px, 2vw, 15px);
    backdrop-filter: blur(10px);
    z-index: 100;
    width: clamp(250px, 80vw, 350px);
}

.control-buttons, .control-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: clamp(6px, 1.5vw, 10px);
    margin-bottom: 8px;
}

.control-btn, .control-button {
    background: rgba(255,255,255,0.2);
    border: 2px solid rgba(255,255,255,0.3);
    border-radius: 10px;
    padding: clamp(8px, 2vw, 12px);
    color: white;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: clamp(0.7rem, 2vw, 0.9rem);
    aspect-ratio: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 40px;
}

.control-btn:hover, .control-button:hover {
    background: rgba(255,255,255,0.3);
    transform: scale(1.05);
}

.control-btn:active, .control-button:active {
    background: rgba(255,255,255,0.4);
    transform: scale(0.95);
    border-color: rgba(255,255,255,0.6);
}

.control-instructions {
    text-align: center;
    font-size: clamp(0.6rem, 1.5vw, 0.8rem);
    color: rgba(255,255,255,0.8);
    margin-top: 5px;
}

/* =================================
   RESPONSIVE BREAKPOINTS - OPTIMIZED FOR DYNAMIC BOARDS
   ================================= */

/* Large Desktop - 1600px+ */
@media (min-width: 1600px) {
    .player-info, .left-panel, .right-panel {
        width: 250px;
    }
    
    .main-board {
        --available-width: calc(100vw - 500px - 60px);
        --min-visible-rows: 10;
    }
}

/* Standard Desktop - 1200px to 1599px */
@media (max-width: 1599px) and (min-width: 1200px) {
    .player-info, .left-panel, .right-panel {
        width: clamp(180px, 18vw, 220px);
    }
    
    .main-board {
        --available-width: calc(100vw - clamp(360px, 36vw, 440px) - 40px);
        --min-visible-rows: 9;
    }
}

/* Laptop - 992px to 1199px */
@media (max-width: 1199px) and (min-width: 992px) {
    .game-screen {
        gap: 15px;
    }
    
    .player-info, .left-panel, .right-panel {
        width: clamp(140px, 16vw, 180px);
    }
    
    .main-board {
        --available-width: calc(100vw - clamp(280px, 32vw, 360px) - 30px);
        --min-visible-rows: 8;
    }
}

/* Tablet และ Mobile - ปรับให้รองรับ dynamic height */
@media (max-width: 991px) and (min-width: 768px) {
    .game-screen {
        flex-direction: column;
        gap: 10px;
        height: 100vh;
        padding: 5px;
        padding-bottom: 60px;
    }
    
    .main-board {
        --board-width: min(50vw, 60vh);
        --min-visible-rows: 6;
        max-height: 70vh;
    }
    
    .opponent-board {
        --board-width: min(30vw, 40vh);
        --min-visible-rows: 4;
        max-height: 50vh;
    }
    
    .mobile-controls {
        display: block;
        position: fixed;
        bottom: 5px;
    }
}

@media (max-width: 767px) and (min-width: 576px) {
    .main-board {
        --board-width: min(80vw, 70vh);
        --min-visible-rows: 6;
        max-height: 60vh;
    }
    
    .opponent-board {
        --board-width: min(60vw, 50vh);
        --min-visible-rows: 4;
        max-height: 40vh;
    }
    
    .mobile-controls {
        display: block;
        width: 90vw;
        max-width: 320px;
    }
    
    .player-info, .left-panel, .right-panel {
        width: 100%;
        flex-direction: row;
        max-height: none;
        overflow: visible;
        gap: 5px;
    }
    
    .player-info-card, 
    .opponent-info-card, 
    .stats-card, 
    .opponent-stats-card {
        flex: 1;
        min-width: 0;
        margin-bottom: 0;
    }
}

/* Mobile Portrait - 575px and below */
@media (max-width: 575px) {
    .game-screen {
        flex-direction: column;
        padding: 2px;
        gap: 5px;
        padding-bottom: 70px;
    }
    
    .main-board {
        --board-width: min(95vw, 60vh);
        --min-visible-rows: 8;
        max-height: 50vh;
    }
    
    .opponent-board {
        --board-width: min(70vw, 35vh);
        --min-visible-rows: 6;
        max-height: 30vh;
    }
    
    .mobile-controls {
        display: block;
        width: 95vw;
        max-width: 280px;
        bottom: 2px;
    }
    
    .control-btn, .control-button {
        min-height: 35px;
        font-size: 0.7rem;
    }
    
    .player-info, .left-panel, .right-panel {
        flex-direction: row;
        width: 100%;
        gap: 3px;
    }
    
    .player-info-card, 
    .opponent-info-card, 
    .stats-card, 
    .opponent-stats-card,
    .next-piece-container,
    .hold-piece-container {
        flex: 1;
        padding: 4px 6px;
        font-size: 0.6rem;
        margin-bottom: 0;
        min-width: 0;
    }
    
    #next-piece-preview, .next-piece-preview,
    #hold-piece-preview, .hold-piece-preview {
        width: 30px;
        height: 30px;
    }
}

/* =================================
   DYNAMIC HEIGHT UTILITY CLASSES
   ================================= */

/* Classes สำหรับควบคุม dynamic height behavior */
.board-auto-resize {
    transition: height 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.board-smooth-transition {
    transition: all 0.3s ease-out;
}

.board-instant-resize {
    transition: none;
}

/* Height presets สำหรับ different game states */
.board-height-minimal {
    --min-visible-rows: 6;
    --max-visible-rows: 12;
}

.board-height-normal {
    --min-visible-rows: 8;
    --max-visible-rows: 16;
}

.board-height-full {
    --min-visible-rows: 12;
    --max-visible-rows: 20;
}

/* =================================
   PERFORMANCE OPTIMIZATIONS
   ================================= */

/* GPU acceleration สำหรับ smooth animations */
.tetris-board,
.tetris-block {
    transform: translateZ(0);
    backface-visibility: hidden;
    will-change: transform, height;
}

/* Optimize transitions */
.main-board.dynamic-height {
    contain: layout style;
}

/* =================================
   ACCESSIBILITY IMPROVEMENTS
   ================================= */

/* High contrast mode */
@media (prefers-contrast: high) {
    .tetris-board {
        border-width: 4px;
    }
    
    .tetris-block {
        border-width: 2px;
        border-color: white;
    }
}

/* Reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
    .tetris-board,
    .tetris-block,
    .main-board {
        transition: none;
        animation: none;
    }
    
    .main-board.expanding,
    .main-board.contracting {
        animation: none;
    }
}

/* =================================
   DEBUG AND DEVELOPMENT HELPERS
   ================================= */

/* Debug grid overlay */
.tetris-board.show-grid {
    background-image: 
        repeating-linear-gradient(
            0deg,
            rgba(255,255,255,0.1) 0px,
            rgba(255,255,255,0.1) 1px,
            transparent 1px,
            transparent calc(100% / var(--current-height-rows))
        ),
        repeating-linear-gradient(
            90deg,
            rgba(255,255,255,0.1) 0px,
            rgba(255,255,255,0.1) 1px,
            transparent 1px,
            transparent 10%
        );
}

/* Visual height indicator */
.tetris-board.show-height-info::before {
    content: attr(data-height-info);
    position: absolute;
    top: -25px;
    left: 0;
    font-size: 12px;
    color: rgba(255,255,255,0.7);
    background: rgba(0,0,0,0.8);
    padding: 2px 6px;
    border-radius: 4px;
    z-index: 1;
}

/* =================================
   LOADING AND PLACEHOLDER STATES
   ================================= */

.board-loading {
    background: linear-gradient(
        45deg,
        rgba(0,0,0,0.8) 25%,
        rgba(255,255,255,0.1) 25%,
        rgba(255,255,255,0.1) 50%,
        rgba(0,0,0,0.8) 50%,
        rgba(0,0,0,0.8) 75%,
        rgba(255,255,255,0.1) 75%
    );
    background-size: 20px 20px;
    animation: loading-stripes 1s linear infinite;
}

@keyframes loading-stripes {
    0% { background-position: 0 0; }
    100% { background-position: 20px 20px; }
}

/* =================================
   BOARD RESIZE ANIMATIONS - ENHANCED
   ================================= */

/* Smooth resize with spring effect */
.main-board.spring-resize {
    transition: height 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

/* Elastic resize for dramatic height changes */
.main-board.elastic-resize {
    transition: height 0.6s cubic-bezier(0.68, -0.6, 0.32, 1.6);
}

/* Quick snap for small adjustments */
.main-board.snap-resize {
    transition: height 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* =================================
   THEME VARIATIONS FOR DYNAMIC BOARDS
   ================================= */

/* Neon theme */
.tetris-board.theme-neon {
    border-color: #00ff41;
    box-shadow: 
        0 0 20px rgba(0, 255, 65, 0.5),
        inset 0 0 20px rgba(0, 255, 65, 0.1);
}

.tetris-board.theme-neon.main-board {
    border-color: #00ffff;
    box-shadow: 
        0 0 30px rgba(0, 255, 255, 0.6),
        inset 0 0 30px rgba(0, 255, 255, 0.1);
}

/* Retro theme */
.tetris-board.theme-retro {
    border-color: #ffff00;
    background: rgba(128, 0, 128, 0.9);
    box-shadow: 
        0 0 15px rgba(255, 255, 0, 0.4),
        inset 0 0 15px rgba(255, 255, 0, 0.1);
}

/* =================================
   UTILITY CLASSES FOR JAVASCRIPT INTEGRATION
   ================================= */

/* Data attributes for dynamic sizing */
[data-dynamic-height="true"] {
    --enable-dynamic-height: 1;
}

[data-min-rows] {
    --min-visible-rows: attr(data-min-rows number, 8);
}

[data-max-rows] {
    --max-visible-rows: attr(data-max-rows number, 20);
}

/* State classes for different resize behaviors */
.resize-immediate { transition: height 0.1s ease; }
.resize-smooth { transition: height 0.3s ease; }
.resize-bouncy { transition: height 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55); }
.resize-disabled { transition: none; }

/* =================================
   PRINT STYLES (IF NEEDED)
   ================================= */

@media print {
    .mobile-controls,
    .control-buttons,
    .control-grid {
        display: none;
    }
    
    .tetris-board {
        box-shadow: none;
        border: 2px solid black;
    }
    
    .game-screen {
        flex-direction: column;
        height: auto;
    }
}
